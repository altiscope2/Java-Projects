{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red204\green108\blue29;\red217\green232\blue247;\red230\green230\blue250;
\red128\green128\blue128;\red18\green144\blue195;\red249\green250\blue244;\red102\green225\blue248;\red104\green151\blue187;
\red30\green181\blue64;\red242\green242\blue0;\red243\green236\blue121;\red23\green198\blue163;\red121\green171\blue255;
\red160\green160\blue160;\red167\green236\blue33;}
{\*\expandedcolortbl;;\csgenericrgb\c80000\c42353\c11373;\csgenericrgb\c85098\c90980\c96863;\csgenericrgb\c90196\c90196\c98039;
\csgenericrgb\c50196\c50196\c50196;\csgenericrgb\c7059\c56471\c76471;\csgenericrgb\c97647\c98039\c95686;\csgenericrgb\c40000\c88235\c97255;\csgenericrgb\c40784\c59216\c73333;
\csgenericrgb\c11765\c70980\c25098;\csgenericrgb\c94902\c94902\c0;\csgenericrgb\c95294\c92549\c47451;\csgenericrgb\c9020\c77647\c63922;\csgenericrgb\c47451\c67059\c100000;
\csgenericrgb\c62745\c62745\c62745;\csgenericrgb\c65490\c92549\c12941;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 package\cf3  TicTacToe\cf4 ;\cf0 \
\
\
\pard\pardeftab720\partightenfactor0
\cf5 //class to create game board\cf0 \
\pard\pardeftab720\partightenfactor0
\cf2 public\cf3  \cf2 class\cf3  \cf6 Board\cf3  \cf7 \{\cf0 \
\pard\pardeftab720\partightenfactor0
\cf3     \cf2 private\cf3  \cf2 char\cf7 [][]\cf3  \cf8 cells\cf3  \cf4 =\cf3  \cf2 new\cf3  \cf2 char\cf7 [\cf9 3\cf7 ][\cf9 3\cf7 ]\cf4 ;\cf0 \
\cf3     \cf0 \
\cf3     \cf5 //constructor to initialize new instance of board class\cf0 \
\cf3     \cf2 public\cf3  \cf10 Board\cf7 ()\cf3  \cf7 \{\cf0 \
\cf3     	\cf5 //create empty game board \cf0 \
\cf3         \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 row\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 row\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 row\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 col\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 col\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 col\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             	\cf0 \
\cf3                 \cf8 cells\cf7 [\cf12 row\cf7 ][\cf12 col\cf7 ]\cf3  \cf4 =\cf3  \cf13 '-'\cf4 ;\cf0 \
\cf3             \cf7 \}\cf0 \
\cf3         \cf7 \}\cf0 \
\cf3     \cf7 \}\cf0 \
\pard\pardeftab720\partightenfactor0
\cf5 //function to return value of rows and columns\cf0 \
\pard\pardeftab720\partightenfactor0
\cf3     \cf2 public\cf3  \cf2 char\cf3  \cf10 getCellValue\cf7 (\cf2 int\cf3  \cf14 row\cf4 ,\cf3  \cf2 int\cf3  \cf14 col\cf7 )\cf3  \cf7 \{\cf0 \
\cf3         \cf2 return\cf3  \cf8 cells\cf7 [\cf14 row\cf7 ][\cf14 col\cf7 ]\cf4 ;\cf0 \
\cf3     \cf7 \}\cf0 \
\
\cf3     \cf2 public\cf3  \cf2 void\cf3  \cf10 setCellValue\cf7 (\cf2 int\cf3  \cf14 row\cf4 ,\cf3  \cf2 int\cf3  \cf14 col\cf4 ,\cf3  \cf2 char\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3         \cf8 cells\cf7 [\cf14 row\cf7 ][\cf14 col\cf7 ]\cf3  \cf4 =\cf3  \cf14 symbol\cf4 ;\cf0 \
\cf3     \cf7 \}\cf0 \
\
\cf3     \cf5 //check board for 3 in a row in any direction of the same characters \cf0 \
\cf3     \cf2 public\cf3  \cf2 boolean\cf3  \cf10 checkWin\cf7 (\cf2 char\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3         \cf5 // check rows\cf0 \
\cf3         \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 row\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 row\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 row\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 if\cf3  \cf7 (\cf8 cells\cf7 [\cf12 row\cf7 ][\cf9 0\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf12 row\cf7 ][\cf9 1\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf12 row\cf7 ][\cf9 2\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3                 \cf2 return\cf3  \cf2 true\cf4 ;\cf0 \
\cf3             \cf7 \}\cf0 \
\cf3         \cf7 \}\cf0 \
\
\cf3         \cf5 // check columns\cf0 \
\cf3         \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 col\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 col\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 col\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 if\cf3  \cf7 (\cf8 cells\cf7 [\cf9 0\cf7 ][\cf12 col\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 1\cf7 ][\cf12 col\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 2\cf7 ][\cf12 col\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3                 \cf2 return\cf3  \cf2 true\cf4 ;\cf0 \
\cf3             \cf7 \}\cf0 \
\cf3         \cf7 \}\cf0 \
\
\cf3         \cf5 // check diagonals\cf0 \
\cf3         \cf2 if\cf3  \cf7 (\cf8 cells\cf7 [\cf9 0\cf7 ][\cf9 0\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 1\cf7 ][\cf9 1\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 2\cf7 ][\cf9 2\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 return\cf3  \cf2 true\cf4 ;\cf0 \
\cf3         \cf7 \}\cf0 \
\cf3         \cf2 if\cf3  \cf7 (\cf8 cells\cf7 [\cf9 0\cf7 ][\cf9 2\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 1\cf7 ][\cf9 1\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf3  \cf4 &&\cf3  \cf8 cells\cf7 [\cf9 2\cf7 ][\cf9 0\cf7 ]\cf3  \cf4 ==\cf3  \cf14 symbol\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 return\cf3  \cf2 true\cf4 ;\cf0 \
\cf3         \cf7 \}\cf0 \
\
\cf3         \cf2 return\cf3  \cf2 false\cf4 ;\cf0 \
\cf3     \cf7 \}\cf0 \
\cf3     \cf5 //check for tied  game  \cf0 \
\cf3     \cf2 public\cf3  \cf2 boolean\cf3  \cf10 checkTie\cf7 ()\cf3  \cf7 \{\cf0 \
\cf3         \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 row\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 row\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 row\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3             \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 col\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 col\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 col\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3                 \cf2 if\cf3  \cf7 (\cf8 cells\cf7 [\cf12 row\cf7 ][\cf12 col\cf7 ]\cf3  \cf4 ==\cf3  \cf13 '-'\cf7 )\cf3  \cf7 \{\cf0 \
\cf3                     \cf2 return\cf3  \cf2 false\cf4 ;\cf0 \
\cf3                 \cf7 \}\cf0 \
\cf3             \cf7 \}\cf0 \
\cf3         \cf7 \}\cf0 \
\cf3         \cf2 return\cf3  \cf2 true\cf4 ;\cf0 \
\cf3     \cf7 \}\cf0 \
\
\cf3     
\f1\i \cf15 @Override
\f0\i0 \cf0 \
\cf3     \cf2 public\cf3  \cf6 String\cf3  \cf10 toString\cf7 ()\cf3  \cf7 \{\cf0 \
\cf3         \cf6 StringBuilder\cf3  \cf11 sb\cf3  \cf4 =\cf3  \cf2 new\cf3  \cf16 StringBuilder\cf7 ()\cf4 ;\cf0 \
\cf3         \cf5 //display header row\cf0 \
\cf3         \cf12 sb\cf4 .\cf16 append\cf7 (\cf13 "  1 2 3\\n"\cf7 )\cf4 ;\cf0 \
\cf3         \cf5 //for loop to move over rows \cf0 \
\cf3         \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 row\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 row\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 row\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3         	\cf5 //adds row +1 and a space\cf0 \
\cf3             \cf12 sb\cf4 .\cf16 append\cf7 (\cf12 row\cf3  \cf4 +\cf3  \cf9 1\cf7 )\cf4 .\cf16 append\cf7 (\cf13 " "\cf7 )\cf4 ;\cf0 \
\cf3             \cf2 for\cf3  \cf7 (\cf2 int\cf3  \cf11 col\cf3  \cf4 =\cf3  \cf9 0\cf4 ;\cf3  \cf12 col\cf3  \cf4 <\cf3  \cf9 3\cf4 ;\cf3  \cf12 col\cf4 ++\cf7 )\cf3  \cf7 \{\cf0 \
\cf3                 \cf12 sb\cf4 .\cf16 append\cf7 (\cf8 cells\cf7 [\cf12 row\cf7 ][\cf12 col\cf7 ])\cf4 .\cf16 append\cf7 (\cf13 " "\cf7 )\cf4 ;\cf0 \
\cf3             \cf7 \}\cf0 \
\cf3             \cf5 //move cursor to next row\cf0 \
\cf3             \cf12 sb\cf4 .\cf16 append\cf7 (\cf13 "\\n"\cf7 )\cf4 ;\cf0 \
\cf3         \cf7 \}\cf0 \
\cf3         \cf2 return\cf3  \cf12 sb\cf4 .\cf16 toString\cf7 ()\cf4 ;\cf0 \
\cf3     \cf7 \}\cf0 \
\pard\pardeftab720\partightenfactor0
\cf7 \}}